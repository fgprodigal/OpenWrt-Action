name: Build OpenWrt NanoPi-R1s H5

on:
  release:
    types: [published]
  push:
    branches:
      - master
    paths:
      - 'r1s-h5.config'
  # schedule:
  #   - cron: 0 16 * * *
  watch:
    types: started
#  watch:
#    types: [started]

env:
  REPO_URL: https://github.com/coolsnowwolf/lede
  REPO_BRANCH: master
  CONFIG_FILE: r1s-h5.config
  DIY_SH: customize.sh
  FREE_UP_DISK: true
  SSH_ACTIONS: false
  UPLOAD_BIN_DIR: false
  UPLOAD_FIRMWARE: true
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-18.04
    if: github.event.repository.owner.id == github.event.sender.id

    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        ref: master

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /swapfile /etc/apt/sources.list.d/*
        sudo -E apt-get -qq update
        wget -O - https://raw.githubusercontent.com/friendlyarm/build-env-on-ubuntu-bionic/master/install.sh | bash
        wget -O - https://raw.githubusercontent.com/friendlyarm/build-env-on-ubuntu-bionic/master/install.sh | bash

    - name: Free up disk space
      if: env.FREE_UP_DISK == 'true'
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /usr/share/dotnet
        docker rmi `docker images -q`
        sudo -E apt-get -q purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* mysql* php*
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean

    - name: Install repo
      run: |
        git clone https://github.com/friendlyarm/repo
        sudo cp repo/repo /usr/bin/

    - name: Download source
      run: |
        mkdir friendlywrt-h5
        cd friendlywrt-h5
        repo init -u https://github.com/friendlyarm/friendlywrt_manifests -b master -m h5.xml --repo-url=https://github.com/friendlyarm/repo  --no-clone-bundle

    - name: Merge upstearm OpenWrt
      run: |
        cd friendlywrt-h5
        cd .repo/manifests
        rm -f ./h5.xml
        wget -O h5.xml https://raw.githubusercontent.com/skytotwo/NanoPi-R1S-Build-By-Actions/master/source_xml/h5_19.07.xml
        repo sync -c  --no-clone-bundle

    - name: Merge lede
      run: |
        cd friendlywrt-h5
        git clone --depth 1 $REPO_URL -b $REPO_BRANCH lede
        cd friendlywrt
        cp -r ../lede/package/lean package/
        sed -i 's/https:\/\/git.openwrt.org\/project\/luci.git^039ef1f4deba725d3591b159bbc9569885d68131/https:\/\/github.com\/coolsnowwolf\/luci/' feeds.conf.default
        sed -i 's/https:\/\/git.openwrt.org\/feed\/packages.git^00803ffc91e80b16e9c1603ff32106d42e255923/https:\/\/github.com\/coolsnowwolf\/packages/' feeds.conf.default

    - name: Update target.mk
      run: |
        cd friendlywrt-h5/friendlywrt/include
        sed -i 's/dnsmasq /dnsmasq-full default-settings luci /' target.mk

    - name: Install feeds
      run: |
        cd friendlywrt-h5/friendlywrt
        echo 'src-git ssrplus https://github.com/fw876/helloworld' >> feeds.conf.default
        ./scripts/feeds update -a
        ./scripts/feeds install -a

    - name: Add tools
      run: |
        chmod +x tools.sh
        cd friendlywrt-h5/friendlywrt
        ../../tools.sh
        
    - name: Load custom configuration
      run: |
        [ -e files ] && mv files friendlywrt-h5/friendlywrt/files
        [ -e mod ] && mv mod friendlywrt-h5/friendlywrt/mod
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE friendlywrt-h5/friendlywrt/.config
        chmod +x $DIY_SH
        cd friendlywrt-h5/friendlywrt
        ../../$DIY_SH
        make defconfig

    - name: SSH connection to Actions
      uses: P3TERX/debugger-action@master
      if: env.SSH_ACTIONS == 'true'

    - name: Download package
      if: always()
      run: |
        cd friendlywrt-h5/friendlywrt
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: Build OpenWrt
      run: |
        cd friendlywrt-h5
        ./build.sh nanopi_r1s.mk

    - name: Zip files
      run: |
        find friendlywrt-h5/out/ -name "FriendlyWrt_*img*" | xargs -i gzip {}

    - name: Organize files
      id: organize
      if: env.UPLOAD_FIRMWARE == 'true' && !cancelled()
      run: |
        cd friendlywrt-h5/scripts/sd-fuse/out/
        rm -rf output_h5_kmodules
        rm -rf .gitignore
        echo "::set-env name=FIRMWARE::$(pwd)"
        echo "::set-output name=status::success"

    - name: Upload firmware directory
      uses: actions/upload-artifact@master
      if: steps.organize.outputs.status == 'success' && !cancelled()
      with:
        name: FriendlyWrt_NanoPi-R1S H5
        path: ${{ env.FIRMWARE }}
